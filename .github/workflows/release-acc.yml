name: Release acc
#description: qa - build release docker image (acc-latest, latest) and deploy it to acc

on:
  workflow_dispatch:
    inputs:
      release-version:
        type: string
        description: "Option to manually set release version. If not set, it is automatically generated from version in version.sbt"
        required: false
      next-version:
        type: string
        description: "Option to manually set next snapshot version. If not set, it is automatically generated from version in version.sbt"
        required: false

jobs:
  ci-job:
    name: CI job

    runs-on: sduoneplatform

    steps:

      - name: Clone source code
        uses: actions/checkout@v2

      - name: Load project configuration
        uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: config/project.yml

      - name: Check out sdu-devops
        uses: actions/checkout@v2
        with:
          repository: ${{ env.sdu-devops-repository }}
          ssh-key: ${{ secrets.SDU_DEVOPS_PRIVATE_DEPLOY_KEY }}
          ref: ${{ env.sdu-devops-branch }}
          path: .github/internal/sdu-devops

      - name: Run scala action
        uses: ./.github/internal/sdu-devops/github-actions/scala-action
        with:
          sdu-devops-branch: ${{ env.sdu-devops-branch }}
          sdu-devops-ssh-key: ${{ secrets['SDU_DEVOPS_PRIVATE_DEPLOY_KEY'] }}
          aws-access-key-id: ${{ secrets['SDUUITGEVERS_AWS_ACCESS_KEY_ID'] }}
          aws-access-key-id-secret: ${{ secrets['SDUUITGEVERS_AWS_SECRET_ACCESS_KEY'] }}
          artifactory-usr: ${{ secrets['ARTIFACTORY_USR'] }}
          artifactory-psw: ${{ secrets['ARTIFACTORY_PSW'] }}
          run-tests: true
          release: true
          release-version: ${{ github.event.inputs.release-version }}
          next-version: ${{ github.event.inputs.next-version }}
