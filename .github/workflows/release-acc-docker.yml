name: Release acc docker
#description: qa - build release docker image (acc-latest, latest) and deploy it to acc

on:
  workflow_dispatch:
    inputs:
      run:
        type: boolean
        required: false
        default: true
  workflow_run:
    workflows: ["Release acc"]
    types:
      - completed

jobs:
  ci-job:
    name: CI job
    runs-on: sduoneplatform
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event.inputs.run }}
    permissions:
      id-token: write
      contents: read
    steps:

      - name: Clone source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Load project configuration
        uses: technote-space/load-config-action@v1
        with:
          CONFIG_FILENAME: config/project.yml

      - name: Check out sdu-devops
        uses: actions/checkout@v2
        with:
          repository: ${{ env.sdu-devops-repository }}
          ssh-key: ${{ secrets.SDU_DEVOPS_PRIVATE_DEPLOY_KEY }}
          ref: ${{ env.sdu-devops-branch }}
          path: .github/internal/sdu-devops

      - name: Get latest tag
        # outputs:
        #   steps.latest-tag.outputs.tag-name
        id: latest-tag
        run: echo "::set-output name=tag-name::$(git describe --tags --abbrev=0)"
        shell: bash

      - name: Check latest tag
        run: |
          if [ "${{ steps.latest-tag.outputs.tag-name }}" == "" ]; then
            echo "::error::latest tag not found"
            exit 1
          fi
        shell: bash

      - name: Run scala action
        uses: ./.github/internal/sdu-devops/github-actions/scala-action
        with:
          checkout-ref: ${{ steps.latest-tag.outputs.tag-name }}
          sdu-devops-branch: ${{ env.sdu-devops-branch }}
          sdu-devops-ssh-key: ${{ secrets['SDU_DEVOPS_PRIVATE_DEPLOY_KEY'] }}
          aws-access-key-id: ${{ secrets['SDUUITGEVERS_AWS_ACCESS_KEY_ID'] }}
          aws-access-key-id-secret: ${{ secrets['SDUUITGEVERS_AWS_SECRET_ACCESS_KEY'] }}
          artifactory-usr: ${{ secrets['ARTIFACTORY_USR'] }}
          artifactory-psw: ${{ secrets['ARTIFACTORY_PSW'] }}
          ecr-aws-account-id: ${{ env.ecr-aws-account-id }}
          ecr-repository: ${{ env.ecr-repository }}
          eks-deploy-deployments: ${{ env.eks-deploy-deployments }}
          eks-deploy-cluster: "ota-cwc"
          eks-deploy-namespace: "cwc-acc"
          eks-deploy-aws-account-id: "723824856824"
          run-tests: true
          publish-docker-image: true
          docker-tag-prefix: acc
          use-tag-prefix-with-project-version: false
          deploy-no-aws-at: true
